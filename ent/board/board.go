// Code generated by ent, DO NOT EDIT.

package board

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the board type in the database.
	Label = "board"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldBoardName holds the string denoting the board_name field in the database.
	FieldBoardName = "board_name"
	// FieldBoardAdmin holds the string denoting the board_admin field in the database.
	FieldBoardAdmin = "board_admin"
	// FieldBoardPassword holds the string denoting the board_password field in the database.
	FieldBoardPassword = "board_password"
	// FieldBoardStar holds the string denoting the board_star field in the database.
	FieldBoardStar = "board_star"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the board in the database.
	Table = "boards"
)

// Columns holds all SQL columns for board fields.
var Columns = []string{
	FieldID,
	FieldBoardName,
	FieldBoardAdmin,
	FieldBoardPassword,
	FieldBoardStar,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultBoardName holds the default value on creation for the "board_name" field.
	DefaultBoardName string
	// DefaultBoardAdmin holds the default value on creation for the "board_admin" field.
	DefaultBoardAdmin string
	// DefaultBoardPassword holds the default value on creation for the "board_password" field.
	DefaultBoardPassword string
	// DefaultBoardStar holds the default value on creation for the "board_star" field.
	DefaultBoardStar int
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
)

// OrderOption defines the ordering options for the Board queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByBoardName orders the results by the board_name field.
func ByBoardName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBoardName, opts...).ToFunc()
}

// ByBoardAdmin orders the results by the board_admin field.
func ByBoardAdmin(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBoardAdmin, opts...).ToFunc()
}

// ByBoardPassword orders the results by the board_password field.
func ByBoardPassword(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBoardPassword, opts...).ToFunc()
}

// ByBoardStar orders the results by the board_star field.
func ByBoardStar(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBoardStar, opts...).ToFunc()
}

// ByCreatedAt orders the results by the createdAt field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
